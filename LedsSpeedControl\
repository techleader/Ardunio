/*
  AnalogReadSerial

  Reads an analog input on pin 0, prints the result to the Serial Monitor.
  Graphical representation is available using Serial Plotter (Tools > Serial Plotter menu).
  Attach the center pin of a potentiometer to pin A0, and the outside pins to +5V and ground.

  This example code is in the public domain.

  https://www.arduino.cc/en/Tutorial/BuiltInExamples/AnalogReadSerial
*/

// the setup routine runs once when you press reset:
void setup() {
  // initialize serial communication at 9600 bits per second:
  Serial.begin(9600);
  pinMode(LED_BUILTIN, OUTPUT); //GREEN
  
  pinMode(8, OUTPUT);  //ORANGE
  
  pinMode(9, OUTPUT);  //RED



}
 
// the loop routine runs over and over again forever:
void loop() {
  // read the input on analog pin 0:
  int sensorValue = analogRead(A0);
  // print out the value you read:
  Serial.println(sensorValue);
  delay(1);  
   digitalWrite(LED_BUILTIN, HIGH);   // turn the LED on (HIGH is the voltage level)
                   // wait for a second
  digitalWrite(LED_BUILTIN, LOW);    // turn the LED off by making the voltage LOW

  //FOR RED
  
if (sensorValue > 500){
  digitalWrite(LED_BUILTIN, LOW); 
  digitalWrite(8, LOW); 
  digitalWrite(9, HIGH); 
  }else if(sensorValue > 200 ){
    digitalWrite(LED_BUILTIN, LOW);
    digitalWrite(8, HIGH); 
    digitalWrite(9, LOW); 
    
    }else{
      
    digitalWrite(LED_BUILTIN, HIGH);
    digitalWrite(8, LOW); 
    digitalWrite(9, LOW); 
    
      }

        
        
  
}


CODE FOR BEEP

/*
  Melody

  Plays a melody

  circuit:
  - 8 ohm speaker on digital pin 7

  created 21 Jan 2010
  modified 30 Aug 2011
  by Tom Igoe

  This example code is in the public domain.

  https://www.arduino.cc/en/Tutorial/BuiltInExamples/toneMelody
*/

#include "pitches.h"

// notes in the melody:
int melody[] = {
  NOTE_C4, NOTE_C4, NOTE_C4, NOTE_C4, NOTE_C4,NOTE_C4, NOTE_C4
};

// note durations: 4 = quarter note, 8 = eighth note, etc.:
int noteDurations[] = {
  4, 4, 4, 4, 4, 4, 4, 4
};

void setup(){
  
  Serial.begin(9600);
  pinMode(LED_BUILTIN, OUTPUT); //GREEN
  pinMode(7, OUTPUT);
  pinMode(8, OUTPUT);  //ORANGE
  
  pinMode(9, OUTPUT);  //RED
  
  }

void tuneNormal() {
  // iterate over the notes of the melody:
  for (int thisNote = 0; thisNote < 8; thisNote++) {

    // to calculate the note duration, take one second divided by the note type.
    //e.g. quarter note = 1000 / 4, eighth note = 1000/8, etc.
    int noteDuration = 1000 / noteDurations[thisNote];
    tone(7, melody[thisNote], noteDuration);

    // to distinguish the notes, set a minimum time between them.
    // the note's duration + 30% seems to work well:
    int pauseBetweenNotes = noteDuration * 1.00;
    delay(pauseBetweenNotes);
    // stop the tone playing:
    noTone(7);
  }
  //delay(5000); 
}

void tuneFast() {
  // iterate over the notes of the melody:
  for (int thisNote = 0; thisNote < 8; thisNote++) {

    // to calculate the note duration, take one second divided by the note type.
    //e.g. quarter note = 1000 / 4, eighth note = 1000/8, etc.
    int noteDuration = 1000 / noteDurations[thisNote];
    tone(7, melody[thisNote], noteDuration);

    // to distinguish the notes, set a minimum time between them.
    // the note's duration + 30% seems to work well:
    int pauseBetweenNotes = noteDuration * .30;
    delay(pauseBetweenNotes);
    // stop the tone playing:
    noTone(7);
  }
}


void loop() {
  // read the input on analog pin 0:
  int sensorValue = analogRead(A0);
  // print out the value you read:
  Serial.println(sensorValue);
  delay(1);  
   digitalWrite(LED_BUILTIN, HIGH);   // turn the LED on (HIGH is the voltage level)
                   // wait for a second
  digitalWrite(LED_BUILTIN, LOW);    // turn the LED off by making the voltage LOW

  //FOR RED
  
  if (sensorValue > 500){
    digitalWrite(LED_BUILTIN, LOW); 
    digitalWrite(8, LOW); 
    digitalWrite(9, HIGH); 
    tuneFast();
  } else if(sensorValue > 200 ){
    digitalWrite(LED_BUILTIN, LOW);
    digitalWrite(8, HIGH); 
    digitalWrite(9, LOW); 
    tuneNormal(); 
    
    }else{
      
    digitalWrite(LED_BUILTIN, HIGH);
    digitalWrite(8, LOW); 
    digitalWrite(9, LOW); 
    
    }
      

  
}
